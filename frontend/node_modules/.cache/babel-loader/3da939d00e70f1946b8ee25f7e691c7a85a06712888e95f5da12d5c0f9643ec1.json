{"ast":null,"code":"import { shortenWithRandomCode, shortenWithCustomCode } from \"./urlShortnerOutput\";\n\n/**\r\n * Decides which API call to use based on customCode.\r\n * Parses response or throws custom error messages.\r\n */\nexport default async function handleSubmit(url, customCode) {\n  if (!url.trim()) {\n    throw new Error(\"Please enter a URL\");\n  }\n  let response;\n  try {\n    if (customCode.trim() === \"\") {\n      response = await shortenWithRandomCode(url.trim());\n    } else {\n      response = await shortenWithCustomCode(url.trim(), customCode.trim());\n    }\n    if (!response.ok) {\n      if (response.status === 409) {\n        throw new Error(\"Custom code already taken\");\n      }\n      throw new Error(`Server error: ${response.status}`);\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Request failed:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["shortenWithRandomCode","shortenWithCustomCode","handleSubmit","url","customCode","trim","Error","response","ok","status","result","json","error","console"],"sources":["C:/Users/Hamburg/source/repos/urlshortner/frontend/src/buttonHandler.js"],"sourcesContent":["import {\r\n  shortenWithRandomCode,\r\n  shortenWithCustomCode,\r\n} from \"./urlShortnerOutput\";\r\n\r\n/**\r\n * Decides which API call to use based on customCode.\r\n * Parses response or throws custom error messages.\r\n */\r\nexport default async function handleSubmit(url, customCode) {\r\n  if (!url.trim()) {\r\n    throw new Error(\"Please enter a URL\");\r\n  }\r\n\r\n  let response;\r\n  try {\r\n    if (customCode.trim() === \"\") {\r\n      response = await shortenWithRandomCode(url.trim());\r\n    } else {\r\n      response = await shortenWithCustomCode(url.trim(), customCode.trim());\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 409) {\r\n        throw new Error(\"Custom code already taken\");\r\n      }\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Request failed:\", error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,qBAAqB,EACrBC,qBAAqB,QAChB,qBAAqB;;AAE5B;AACA;AACA;AACA;AACA,eAAe,eAAeC,YAAYA,CAACC,GAAG,EAAEC,UAAU,EAAE;EAC1D,IAAI,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;EAEA,IAAIC,QAAQ;EACZ,IAAI;IACF,IAAIH,UAAU,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BE,QAAQ,GAAG,MAAMP,qBAAqB,CAACG,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACLE,QAAQ,GAAG,MAAMN,qBAAqB,CAACE,GAAG,CAACE,IAAI,CAAC,CAAC,EAAED,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC;IACvE;IAEA,IAAI,CAACE,QAAQ,CAACC,EAAE,EAAE;MAChB,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIH,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAM,IAAIA,KAAK,CAAC,iBAAiBC,QAAQ,CAACE,MAAM,EAAE,CAAC;IACrD;IAEA,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}