{"ast":null,"code":"//async for the await (waits for response) command \nexport default async function handleSubmit() {\n  const urlInput = document.querySelector(\".input\");\n  const codeInput = document.querySelector(\".input-short-code\");\n  const url = urlInput ? urlInput.value.trim() : \"\";\n  const customCode = codeInput ? codeInput.value.trim() : \"\";\n  //check for urls\n  if (!url) {\n    alert(\"Please enter a URL\");\n    return;\n  }\n  try {\n    if (customCode === \"\")\n      // no custom url was inputed\n      await handleRandomShotCode(url);else await handleCustomShortCode(url, customCode);\n  } catch (error) {\n    console.error(\"Error sending request:\", error);\n    alert(\"error\");\n  }\n}\nasync function handleRandomShotCode() {\n  const response = await fetch(\"http://localhost:5235/api/shorten\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\" //tels im sending json\n    },\n    body: JSON.stringify({\n      url: url\n    }) // the json itself will be \"url\": \"https://in&outUrl.com\"\n  });\n  if (!response.ok) {\n    throw new Error(`Server error: ${response.status}`);\n  }\n  const result = await response.json(); // get the response\n  console.log(\"Full response JSON:\", result);\n  console.log(\"Shortened URL:\", result.shortUrl);\n  alert(result.shortUrl);\n}\nasync function handleCustomShortCode() {\n  const response = await fetch(\"http://localhost:5235/api/custom/shorten\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\" //tels im sending json\n    },\n    body: JSON.stringify({\n      url: url\n    }) // the json itself will be \"url\": \"https://in&outUrl.com\"\n  });\n  if (!response.ok) {\n    throw new Error(`Server error: ${response.status}`);\n  }\n  const result = await response.json(); // get the response\n  console.log(\"Full response JSON:\", result);\n  console.log(\"Shortened URL:\", result.shortUrl);\n  alert(result.shortUrl);\n}","map":{"version":3,"names":["handleSubmit","urlInput","document","querySelector","codeInput","url","value","trim","customCode","alert","handleRandomShotCode","handleCustomShortCode","error","console","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","log","shortUrl"],"sources":["C:/Users/Hamburg/source/repos/urlshortner/frontend/src/buttonHandler.js"],"sourcesContent":["//async for the await (waits for response) command \r\nexport default async function handleSubmit() {\r\n\r\n    const urlInput = document.querySelector(\".input\");\r\n    const codeInput = document.querySelector(\".input-short-code\");\r\n\r\n    const url = urlInput ? urlInput.value.trim() : \"\";\r\n    const customCode = codeInput ? codeInput.value.trim() : \"\";\r\n    //check for urls\r\n    if (!url) {\r\n        alert(\"Please enter a URL\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        if (customCode === \"\") // no custom url was inputed\r\n            await handleRandomShotCode(url)\r\n        else\r\n            await handleCustomShortCode(url, customCode)\r\n\r\n    } catch (error) {\r\n        console.error(\"Error sending request:\", error);\r\n        alert(\"error\");\r\n    }\r\n    \r\n}\r\n\r\nasync function handleRandomShotCode()\r\n{\r\n    const response = await fetch(\"http://localhost:5235/api/shorten\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\" //tels im sending json\r\n        },\r\n        body: JSON.stringify({ url: url }) // the json itself will be \"url\": \"https://in&outUrl.com\"\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json(); // get the response\r\n    console.log(\"Full response JSON:\", result);\r\n    console.log(\"Shortened URL:\", result.shortUrl);\r\n    alert(result.shortUrl)\r\n}\r\n\r\n\r\nasync function handleCustomShortCode()\r\n{\r\n    const response = await fetch(\"http://localhost:5235/api/custom/shorten\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\" //tels im sending json\r\n        },\r\n        body: JSON.stringify({ url: url }) // the json itself will be \"url\": \"https://in&outUrl.com\"\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json(); // get the response\r\n    console.log(\"Full response JSON:\", result);\r\n    console.log(\"Shortened URL:\", result.shortUrl);\r\n    alert(result.shortUrl)\r\n}"],"mappings":"AAAA;AACA,eAAe,eAAeA,YAAYA,CAAA,EAAG;EAEzC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EACjD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;EAE7D,MAAME,GAAG,GAAGJ,QAAQ,GAAGA,QAAQ,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE;EACjD,MAAMC,UAAU,GAAGJ,SAAS,GAAGA,SAAS,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE;EAC1D;EACA,IAAI,CAACF,GAAG,EAAE;IACNI,KAAK,CAAC,oBAAoB,CAAC;IAC3B;EACJ;EAEA,IAAI;IACA,IAAID,UAAU,KAAK,EAAE;MAAE;MACnB,MAAME,oBAAoB,CAACL,GAAG,CAAC,MAE/B,MAAMM,qBAAqB,CAACN,GAAG,EAAEG,UAAU,CAAC;EAEpD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CH,KAAK,CAAC,OAAO,CAAC;EAClB;AAEJ;AAEA,eAAeC,oBAAoBA,CAAA,EACnC;EACI,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;IAC9DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB,CAAC;IACvC,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEf,GAAG,EAAEA;IAAI,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,iBAAiBR,QAAQ,CAACS,MAAM,EAAE,CAAC;EACvD;EAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;EACtCZ,OAAO,CAACa,GAAG,CAAC,qBAAqB,EAAEF,MAAM,CAAC;EAC1CX,OAAO,CAACa,GAAG,CAAC,gBAAgB,EAAEF,MAAM,CAACG,QAAQ,CAAC;EAC9ClB,KAAK,CAACe,MAAM,CAACG,QAAQ,CAAC;AAC1B;AAGA,eAAehB,qBAAqBA,CAAA,EACpC;EACI,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB,CAAC;IACvC,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEf,GAAG,EAAEA;IAAI,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,iBAAiBR,QAAQ,CAACS,MAAM,EAAE,CAAC;EACvD;EAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;EACtCZ,OAAO,CAACa,GAAG,CAAC,qBAAqB,EAAEF,MAAM,CAAC;EAC1CX,OAAO,CAACa,GAAG,CAAC,gBAAgB,EAAEF,MAAM,CAACG,QAAQ,CAAC;EAC9ClB,KAAK,CAACe,MAAM,CAACG,QAAQ,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}